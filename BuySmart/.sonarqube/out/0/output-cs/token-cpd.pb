œ	
;D:\BuySmart\BuySmart\Domain\Repositories\IUserRepository.cs
	namespace 	
Domain
 
. 
Repositories 
{ 
public 

	interface 
IUserRepository $
<$ %
T% &
>& '
where( -
T. /
:0 1
User2 6
{ 
Task 
< 
IEnumerable 
< 
T 
> 
> 
GetAllAsync (
(( )
)) *
;* +
Task		 
<		 
T		 
>		 
GetByIdAsync		 
(		 
Guid		 !
userId		" (
)		( )
;		) *
Task

 
<

 
Result

 
<

 
Guid

 
>

 
>

 
AddAsync

 #
(

# $
T

$ %
user

& *
)

* +
;

+ ,
Task 
< 
Result 
< 
object 
> 
> 
UpdateAsync (
(( )
T) *
user+ /
)/ 0
;0 1
} 
} ½
?D:\BuySmart\BuySmart\Domain\Repositories\IUserAuthRepository.cs
	namespace 	
Domain
 
. 
Repositories 
{ 
public 

	interface 
IUserAuthRepository (
<( )
User) -
>- .
{ 
Task 
< 
Result 
< 
Guid 
> 
> 
Register #
(# $
int$ '
verificationCode( 8
,8 9
CancellationToken: K
cancellationTokenL ]
)] ^
;^ _
Task 
< 
Result 
< 
string 
> 
> 
Login "
(" #
User# '
user( ,
), -
;- .
Task		 
<		 
Result		 
<		 
string		 
>		 
>		  
SendVerificationCode		 1
(		1 2
User		2 6
user		7 ;
,		; <
CancellationToken		= N
cancellationToken		O `
)		` a
;		a b
Task

 
DeleteUserAsync

 
(

 
Guid

 !
userId

" (
)

( )
;

) *
Task 
< 
User 
> 
GetByIdAsync 
(  
Guid  $
userId% +
)+ ,
;, -
Task 
< 
Result 
< 
string 
> 
> 
VerifyPassword +
(+ ,
Guid, 0
userId1 7
,7 8
string9 ?
password@ H
)H I
;I J
Task 
< 
Result 
< 
object 
> 
> 
UpdateUserAsync ,
(, -
User- 1
user2 6
)6 7
;7 8
} 
} Ú	
ED:\BuySmart\BuySmart\Domain\Repositories\IReviewBusinessRepository.cs
	namespace 	
Domain
 
. 
Repositories 
{ 
public 

	interface %
IReviewBusinessRepository .
{ 
Task 
< 
IEnumerable 
< 
Review 
>  
>  !
GetAllAsync" -
(- .
). /
;/ 0
Task		 
<		 
Review		 
>		 
GetByIdAsync		 !
(		! "
Guid		" &
reviewId		' /
)		/ 0
;		0 1
Task

 
<

 
Result

 
<

 
Guid

 
>

 
>

 
AddAsync

 #
(

# $
Review

$ *
review

+ 1
)

1 2
;

2 3
Task 
< 
Result 
< 
object 
> 
> 
UpdateAsync (
(( )
Review) /
review0 6
)6 7
;7 8
Task 
DeleteAsync 
( 
Guid 
reviewId &
)& '
;' (
} 
} Ô	
>D:\BuySmart\BuySmart\Domain\Repositories\IProductRepository.cs
	namespace 	
Domain
 
. 
Repositories 
{ 
public 

	interface 
IProductRepository '
{ 
Task 
< 
IEnumerable 
< 
Product  
>  !
>! "
GetAllAsync# .
(. /
)/ 0
;0 1
Task		 
<		 
Product		 
>		 
GetByIdAsync		 "
(		" #
Guid		# '
	productId		( 1
)		1 2
;		2 3
Task

 
<

 
Result

 
<

 
Guid

 
>

 
>

 
AddAsync

 #
(

# $
Product

$ +
product

, 3
)

3 4
;

4 5
Task 
< 
Result 
< 
object 
> 
> 
UpdateAsync (
(( )
Product) 0
product1 8
)8 9
;9 :
Task 
DeleteAsync 
( 
Guid 
	productId '
)' (
;( )
} 
} ü
?D:\BuySmart\BuySmart\Domain\Repositories\ICategoryRepository.cs
	namespace 	
Domain
 
. 
Repositories 
{ 
public 

	interface 
ICategoryRepository (
{ 
Task 
< 
IEnumerable 
< 
Category !
>! "
>" #
GetAllAsync$ /
(/ 0
)0 1
;1 2
Task		 
<		 
Category		 
>		 
GetByIdAsync		 #
(		# $
Guid		$ (

categoryId		) 3
)		3 4
;		4 5
Task

 
<

 
Result

 
<

 
Guid

 
>

 
>

 
AddAsync

 #
(

# $
Category

$ ,
category

- 5
)

5 6
;

6 7
Task 
< 
Result 
< 
object 
> 
> 
UpdateAsync (
(( )
Category) 1
category2 :
): ;
;; <
Task 
DeleteAsync 
( 
Guid 

categoryId (
)( )
;) *
Task 
< 
IEnumerable 
< 
Category !
>! "
>" #
GetByNamesAsync$ 3
(3 4
List4 8
<8 9
string9 ?
>? @
namesA F
)F G
;G H
} 
} ¶	
;D:\BuySmart\BuySmart\Domain\Repositories\ICartRepository.cs
	namespace 	
Domain
 
. 
Repositories 
{ 
public 

	interface 
ICartRepository $
{ 
Task 
< 
IEnumerable 
< 
Cart 
> 
> 
GetAllAsync  +
(+ ,
), -
;- .
Task		 
<		 
Cart		 
>		 
GetByIdAsync		 
(		  
Guid		  $
cartId		% +
)		+ ,
;		, -
Task

 
<

 
Result

 
<

 
Guid

 
>

 
>

 
AddAsync

 #
(

# $
Cart

$ (
cart

) -
)

- .
;

. /
Task 
< 
Result 
< 
object 
> 
> 
UpdateAsync (
(( )
Cart) -
cart. 2
)2 3
;3 4
Task 
DeleteAsync 
( 
Guid 
cartId $
)$ %
;% &
} 
} Þ	
?D:\BuySmart\BuySmart\Domain\Repositories\IBusinessRepository.cs
	namespace 	
Domain
 
. 
Repositories 
{ 
public 

	interface 
IBusinessRepository (
{ 
Task 
< 
IEnumerable 
< 
Business !
>! "
>" #
GetAllAsync$ /
(/ 0
)0 1
;1 2
Task		 
<		 
Business		 
>		 
GetByIdAsync		 #
(		# $
Guid		$ (

businessId		) 3
)		3 4
;		4 5
Task

 
<

 
Result

 
<

 
Guid

 
>

 
>

 
AddAsync

 #
(

# $
Business

$ ,
business

- 5
)

5 6
;

6 7
Task 
< 
Result 
< 
object 
> 
> 
UpdateAsync (
(( )
Business) 1
business2 :
): ;
;; <
Task 
DeleteAsync 
( 
Guid 

businessId (
)( )
;) *
} 
} ä
2D:\BuySmart\BuySmart\Domain\Entities\UserClient.cs
	namespace 	
Domain
 
. 
Entities 
{ 
public 

class 

UserClient 
: 
User "
{ 
public 
ICollection 
< 
Order  
>  !
Orders" (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
=7 8
new9 <
List= A
<A B
OrderB G
>G H
(H I
)I J
;J K
public 
ICollection 
< 
Review !
>! "
Reviews# *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
=9 :
new; >
List? C
<C D
ReviewD J
>J K
(K L
)L M
;M N
public 
ICollection 
< 
History "
>" #
	Histories$ -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
=< =
new> A
ListB F
<F G
HistoryG N
>N O
(O P
)P Q
;Q R
public 
ICollection 
< 
Recommendation )
>) *
Recommendations+ :
{; <
get= @
;@ A
setB E
;E F
}G H
=I J
newK N
ListO S
<S T
RecommendationT b
>b c
(c d
)d e
;e f
public		 
Cart		 
?		 
Cart		 
{		 
get		 
;		  
set		! $
;		$ %
}		& '
} 
} Ë
4D:\BuySmart\BuySmart\Domain\Entities\UserBusiness.cs
	namespace 	
Domain
 
. 
Entities 
{ 
public 

class 
UserBusiness 
: 
User  $
{ 
public 
Business 
? 
Business !
{" #
get$ '
;' (
set) ,
;, -
}. /
} 
}		 Ž
,D:\BuySmart\BuySmart\Domain\Entities\User.cs
	namespace 	
Domain
 
. 
Entities 
{ 
public 

class 
User 
{ 
public 
Guid 
UserId 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
=* +
string, 2
.2 3
Empty3 8
;8 9
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
string/ 5
.5 6
Empty6 ;
;; <
public		 
UserType		 
UserType		  
{		! "
get		# &
;		& '
set		( +
;		+ ,
}		- .
public

 
string

 
Image

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
=

* +
string

, 2
.

2 3
Empty

3 8
;

8 9
} 
public 

enum 
UserType 
{ 
Client 
, 
Business 
, 
Admin 
} 
} ·
.D:\BuySmart\BuySmart\Domain\Entities\Review.cs
	namespace 	
Domain
 
. 
Entities 
{ 
public 

class 
Review 
{ 
public 
Guid 
ReviewId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
Guid 
UserClientId  
{! "
get# &
;& '
set( +
;+ ,
}- .
public		 

UserClient		 

UserClient		 $
{		% &
get		' *
;		* +
set		, /
;		/ 0
}		1 2
=		3 4
null		5 9
!		9 :
;		: ;
public 
Guid 
? 

BusinessId 
{  !
get" %
;% &
set' *
;* +
}, -
public 
Business 
? 
Business !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
Guid 
? 
	ProductId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
Product 
? 
Product 
{  !
get" %
;% &
set' *
;* +
}, -
public 
double 
Rating 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
Comment 
{ 
get  #
;# $
set% (
;( )
}* +
=, -
string. 4
.4 5
Empty5 :
;: ;
public 
DateTime 

ReviewDate "
{# $
get% (
;( )
set* -
;- .
}/ 0
=1 2
DateTime3 ;
.; <
UtcNow< B
;B C
} 
} â
6D:\BuySmart\BuySmart\Domain\Entities\Recommendation.cs
	namespace 	
Domain
 
. 
Entities 
{ 
public 

class 
Recommendation 
{ 
public 
Guid 
RecommendationId $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
Guid 
UserClientId  
{! "
get# &
;& '
set( +
;+ ,
}- .
public		 

UserClient		 

UserClient		 $
{		% &
get		' *
;		* +
set		, /
;		/ 0
}		1 2
=		3 4
null		5 9
!		9 :
;		: ;
public 
Guid 
	ProductId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
Product 
Product 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
null/ 3
!3 4
;4 5
public 
DateTime 
RecommendationDate *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 
double 
RelevanceScore $
{% &
get' *
;* +
set, /
;/ 0
}1 2
} 
} ë
/D:\BuySmart\BuySmart\Domain\Entities\Product.cs
	namespace 	
Domain
 
. 
Entities 
{ 
public 

class 
Product 
{ 
public 
Guid 
	ProductId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
string2 8
.8 9
Empty9 >
;> ?
public 
decimal 
Price 
{ 
get "
;" #
set$ '
;' (
}) *
public		 
double		 
Stock		 
{		 
get		 !
;		! "
set		# &
;		& '
}		( )
public

 
double

 
Rating

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
public 
string 
Image 
{ 
get !
;! "
set# &
;& '
}( )
=* +
string, 2
.2 3
Empty3 8
;8 9
public 
Guid 

BusinessId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
Business 
Business  
{! "
get# &
;& '
set( +
;+ ,
}- .
=/ 0
null1 5
!5 6
;6 7
public 
ICollection 
< 
Category #
># $

Categories% /
{0 1
get2 5
;5 6
set7 :
;: ;
}< =
=> ?
new@ C
ListD H
<H I
CategoryI Q
>Q R
(R S
)S T
;T U
public 
ICollection 
< 
	OrderItem $
>$ %

OrderItems& 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
=? @
newA D
ListE I
<I J
	OrderItemJ S
>S T
(T U
)U V
;V W
public 
ICollection 
< 
Review !
>! "
Reviews# *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
=9 :
new; >
List? C
<C D
ReviewD J
>J K
(K L
)L M
;M N
public 
ICollection 
< 
History "
>" #
	Histories$ -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
=< =
new> A
ListB F
<F G
HistoryG N
>N O
(O P
)P Q
;Q R
public 
ICollection 
< 
Recommendation )
>) *
Recommendations+ :
{; <
get= @
;@ A
setB E
;E F
}G H
=I J
newK N
ListO S
<S T
RecommendationT b
>b c
(c d
)d e
;e f
} 
public!! 

enum!! 
ProductOrder!! 
{"" 
Def## 
,## 
Asc$$ 
,$$ 
Desc%% 
}&& 
}'' º
1D:\BuySmart\BuySmart\Domain\Entities\OrderItem.cs
	namespace 	
Domain
 
. 
Entities 
{ 
public 

class 
	OrderItem 
{ 
public 
Guid 
OrderItemId 
{  !
get" %
;% &
set' *
;* +
}, -
public 
Guid 
? 
OrderId 
{ 
get "
;" #
set$ '
;' (
}) *
public		 
Order		 
Order		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
=		) *
null		+ /
!		/ 0
;		0 1
public 
Guid 
? 
CartId 
{ 
get !
;! "
set# &
;& '
}( )
public 
Cart 
Cart 
{ 
get 
; 
set  #
;# $
}% &
=' (
null) -
!- .
;. /
public 
Guid 
	ProductId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
Product 
Product 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
null/ 3
!3 4
;4 5
public 
double 
Quantity 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
double 
Price 
{ 
get !
;! "
set# &
;& '
}( )
} 
} ¢

/D:\BuySmart\BuySmart\Domain\Entities\History.cs
	namespace 	
Domain
 
. 
Entities 
{ 
public 

class 
History 
{ 
public 
Guid 
	HistoryId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
Guid 
UserClientId  
{! "
get# &
;& '
set( +
;+ ,
}- .
public		 

UserClient		 

UserClient		 $
{		% &
get		' *
;		* +
set		, /
;		/ 0
}		1 2
=		3 4
null		5 9
!		9 :
;		: ;
public 
Guid 
	ProductId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
Product 
Product 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
null/ 3
!3 4
;4 5
public 
DateTime 
	AccesDate !
{" #
get$ '
;' (
set) ,
;, -
}. /
} 
} ‘
8D:\BuySmart\BuySmart\Domain\Entities\ConfirmationCode.cs
	namespace 	
Domain
 
. 
Entities 
{ 
public 

class 
ConfirmationCode !
{ 
public 
Guid 
CodeId 
{ 
get  
;  !
set" %
;% &
}' (
public 
int 
Code 
{ 
get 
; 
set "
;" #
}$ %
public 
DateTime 
CreationTime $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public		 
string		 
Email		 
{		 
get		 !
;		! "
set		# &
;		& '
}		( )
=		* +
string		, 2
.		2 3
Empty		3 8
;		8 9
public

 
string

 
Password

 
{

  
get

! $
;

$ %
set

& )
;

) *
}

+ ,
=

- .
string

/ 5
.

5 6
Empty

6 ;
;

; <
public 
UserType 
UserType  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
byte 
[ 
] 
Image 
{ 
get !
;! "
set# &
;& '
}( )
=* +
Array, 1
.1 2
Empty2 7
<7 8
byte8 <
>< =
(= >
)> ?
;? @
} 
} Ö	
0D:\BuySmart\BuySmart\Domain\Entities\Category.cs
	namespace 	
Domain
 
. 
Entities 
{ 
public 

class 
Category 
{ 
public 
Guid 

CategoryId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
string2 8
.8 9
Empty9 >
;> ?
public

 
ICollection

 
<

 
Product

 "
>

" #
Products

$ ,
{

- .
get

/ 2
;

2 3
set

4 7
;

7 8
}

9 :
=

; <
new

= @
List

A E
<

E F
Product

F M
>

M N
(

N O
)

O P
;

P Q
} 
} ð
,D:\BuySmart\BuySmart\Domain\Entities\Cart.cs
	namespace 	
Domain
 
. 
Entities 
{ 
public 

class 
Cart 
{ 
public 
Guid 
CartId 
{ 
get  
;  !
set" %
;% &
}' (
public 
Guid 
UserClientId  
{! "
get# &
;& '
set( +
;+ ,
}- .
public		 

UserClient		 

UserClient		 $
{		% &
get		' *
;		* +
set		, /
;		/ 0
}		1 2
=		3 4
null		5 9
!		9 :
;		: ;
public 
ICollection 
< 
	OrderItem $
>$ %

OrderItems& 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
=? @
newA D
ListE I
<I J
	OrderItemJ S
>S T
(T U
)U V
;V W
} 
} €
0D:\BuySmart\BuySmart\Domain\Entities\Business.cs
	namespace 	
Domain
 
. 
Entities 
{ 
public 

class 
Business 
{ 
public 
Guid 

BusinessID 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
string2 8
.8 9
Empty9 >
;> ?
public 
string 
Address 
{ 
get  #
;# $
set% (
;( )
}* +
=, -
string. 4
.4 5
Empty5 :
;: ;
public		 
string		 
PhoneNumber		 !
{		" #
get		$ '
;		' (
set		) ,
;		, -
}		. /
=		0 1
string		2 8
.		8 9
Empty		9 >
;		> ?
public 
Guid 
UserBusinessId "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
UserBusiness 
UserBusiness (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
=7 8
null9 =
!= >
;> ?
public 
ICollection 
< 
Product "
>" #
Products$ ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
=; <
new= @
ListA E
<E F
ProductF M
>M N
(N O
)O P
;P Q
public 
ICollection 
< 
Review !
>! "
Reviews# *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
=9 :
new; >
List? C
<C D
ReviewD J
>J K
(K L
)L M
;M N
public 
ICollection 
< 
Order  
>  !
Orders" (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
=7 8
new9 <
List= A
<A B
OrderB G
>G H
(H I
)I J
;J K
} 
} »
-D:\BuySmart\BuySmart\Domain\Entities\Order.cs
	namespace 	
Domain
 
. 
Entities 
{ 
public 

class 
Order 
{ 
public 
Guid 
OrderId 
{ 
get !
;! "
set# &
;& '
}( )
public 
OrderStatus 
OrderStatus &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
double 

TotalPrice  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
DateTime 
	OrderDate !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
DateTime2 :
.: ;
UtcNow; A
;A B
public		 
string		 
DeliveryPhoneNumber		 )
{		* +
get		, /
;		/ 0
set		1 4
;		4 5
}		6 7
=		8 9
string		: @
.		@ A
Empty		A F
;		F G
public 
PaymentMethod 
PaymentMethod *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 
string 
DeliveryAddress %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
=4 5
string6 <
.< =
Empty= B
;B C
public 
Guid 
UserClientId  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 

UserClient 

UserClient $
{% &
get' *
;* +
set, /
;/ 0
}1 2
=3 4
null5 9
!9 :
;: ;
public 
Guid 

BusinessId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
Business 
Business  
{! "
get# &
;& '
set( +
;+ ,
}- .
=/ 0
null1 5
!5 6
;6 7
public 
ICollection 
< 
	OrderItem $
>$ %

OrderItems& 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
=? @
newA D
ListE I
<I J
	OrderItemJ S
>S T
(T U
)U V
;V W
} 
public 

enum 
OrderStatus 
{ 
Pending 
, 

Processing 
, 
	Delivered 
, 
	Cancelled 
}   
public"" 

enum"" 
PaymentMethod"" 
{## 

CreditCard$$ 
,$$ 
Cash%% 
}&& 
}'' Ø
,D:\BuySmart\BuySmart\Domain\Common\Result.cs
	namespace 	
Domain
 
. 
Common 
{ 
public 

class 
Result 
< 
T 
> 
{ 
public 
T 
Data 
{ 
get 
; 
} 
public 
bool 
	IsSuccess 
{ 
get  #
;# $
}% &
public 
string 
ErrorMessage "
{# $
get% (
;( )
}* +
	protected		 
Result		 
(		 
bool		 
isSucces		 &
,		& '
T		( )
data		* .
,		. /
string		0 6
errorMessage		7 C
)		C D
{

 	
	IsSuccess 
= 
isSucces  
;  !
Data 
= 
data 
; 
ErrorMessage 
= 
errorMessage '
;' (
} 	
public 
static 
Result 
< 
T 
> 
Success  '
(' (
T( )
data* .
). /
=>0 2
new3 6
(7 8
true8 <
,< =
data> B
,B C
nullD H
!H I
)I J
;J K
public 
static 
Result 
< 
T 
> 
Failure  '
(' (
string( .
errorMessage/ ;
); <
=>= ?
new@ C
(D E
falseE J
,J K
defaultL S
!S T
,T U
errorMessageV b
)b c
;c d
} 
} 