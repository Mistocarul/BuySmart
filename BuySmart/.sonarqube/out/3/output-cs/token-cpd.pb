¬9
/D:\BuySmart\BuySmart\Identity\UsersDbContext.cs
	namespace 	
Identity
 
{ 
public 

class 
UsersDbContext 
:  !
	DbContext" +
{ 
public 
UsersDbContext 
( 
DbContextOptions .
<. /
UsersDbContext/ =
>= >
options? F
)F G
:H I
baseJ N
(N O
optionsO V
)V W
{		 	
}

 	
public 
DbSet 
< 
User 
> 
Users  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
DbSet 
< 
ConfirmationCode %
>% &
ConfirmationCodes' 8
{9 :
get; >
;> ?
set@ C
;C D
}E F
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
modelBuilder= I
)I J
{ 	
modelBuilder 
. 
Entity 
<  
User  $
>$ %
(% &
entity& ,
=>- /
{ 
entity 
. 
ToTable 
( 
$str &
)& '
;' (
entity 
. 
HasKey 
( 
e 
=>  "
e# $
.$ %
UserId% +
)+ ,
;, -
entity 
. 
Property 
(  
e  !
=>" $
e% &
.& '
UserId' -
)- .
. 
HasColumnType "
(" #
$str# )
)) *
;* +
entity 
. 
Property 
(  
e  !
=>" $
e% &
.& '
Email' ,
), -
. 

IsRequired 
(  
)  !
. 
HasMaxLength !
(! "
$num" %
)% &
;& '
entity 
. 
Property 
(  
e  !
=>" $
e% &
.& '
Password' /
)/ 0
. 

IsRequired 
(  
)  !
. 
HasMaxLength !
(! "
$num" %
)% &
;& '
entity 
. 
Property 
(  
e  !
=>" $
e% &
.& '
Name' +
)+ ,
. 

IsRequired 
(  
false  %
)% &
. 
HasMaxLength !
(! "
$num" %
)% &
;& '
entity   
.   
Property   
(    
e    !
=>  " $
e  % &
.  & '
Image  ' ,
)  , -
.!! 

IsRequired!! 
(!!  
false!!  %
)!!% &
."" 
HasMaxLength"" !
(""! "
$num""" %
)""% &
;""& '
entity## 
.## 
Property## 
(##  
e##  !
=>##" $
e##% &
.##& '
UserType##' /
)##/ 0
.$$ 
HasDefaultValue$$ $
($$$ %
UserType$$% -
.$$- .
Client$$. 4
)$$4 5
;$$5 6
}%% 
)%% 
;%% 
modelBuilder'' 
.'' 
Entity'' 
<''  
User''  $
>''$ %
(''% &
)''& '
.(( 
HasIndex(( 
((( 
u(( 
=>(( 
u((  
.((  !
Email((! &
)((& '
.)) 
IsUnique)) 
()) 
))) 
;)) 
modelBuilder++ 
.++ 
Entity++ 
<++  
ConfirmationCode++  0
>++0 1
(++1 2
entity++2 8
=>++9 ;
{,, 
entity-- 
.-- 
ToTable-- 
(-- 
$str-- 2
)--2 3
;--3 4
entity.. 
... 
HasKey.. 
(.. 
e.. 
=>..  "
e..# $
...$ %
CodeId..% +
)..+ ,
;.., -
entity// 
.// 
Property// 
(//  
e//  !
=>//" $
e//% &
.//& '
CodeId//' -
)//- .
.00 
HasColumnType00 "
(00" #
$str00# )
)00) *
.11 
ValueGeneratedOnAdd11 (
(11( )
)11) *
;11* +
entity22 
.22 
Property22 
(22  
e22  !
=>22" $
e22% &
.22& '
Code22' +
)22+ ,
.33 

IsRequired33 
(33  
)33  !
;33! "
entity44 
.44 
Property44 
(44  
e44  !
=>44" $
e44% &
.44& '
CreationTime44' 3
)443 4
.55 

IsRequired55 
(55  
)55  !
.66 
HasDefaultValueSql66 '
(66' (
$str66( ;
)66; <
;66< =
entity77 
.77 
Property77 
(77  
e77  !
=>77" $
e77% &
.77& '
Name77' +
)77+ ,
.88 

IsRequired88 
(88  
)88  !
.99 
HasMaxLength99 !
(99! "
$num99" %
)99% &
;99& '
entity:: 
.:: 
Property:: 
(::  
e::  !
=>::" $
e::% &
.::& '
Email::' ,
)::, -
.;; 

IsRequired;; 
(;;  
);;  !
.<< 
HasMaxLength<< !
(<<! "
$num<<" %
)<<% &
;<<& '
entity== 
.== 
HasIndex== 
(==  
e==  !
=>==" $
e==% &
.==& '
Email==' ,
)==, -
.>> 
IsUnique>> 
(>> 
)>> 
;>>  
entity?? 
.?? 
Property?? 
(??  
e??  !
=>??" $
e??% &
.??& '
Password??' /
)??/ 0
.@@ 

IsRequired@@ 
(@@  
)@@  !
.AA 
HasMaxLengthAA !
(AA! "
$numAA" %
)AA% &
;AA& '
entityBB 
.BB 
PropertyBB 
(BB  
eBB  !
=>BB" $
eBB% &
.BB& '
UserTypeBB' /
)BB/ 0
.CC 

IsRequiredCC 
(CC  
)CC  !
;CC! "
entityDD 
.DD 
PropertyDD 
(DD  
eDD  !
=>DD" $
eDD% &
.DD& '
ImageDD' ,
)DD, -
.EE 

IsRequiredEE 
(EE  
falseEE  %
)EE% &
;EE& '
}FF 
)FF 
;FF 
}GG 	
}HH 
}II È­
@D:\BuySmart\BuySmart\Identity\Repositories\UserAuthRepository.cs
	namespace 	
Identity
 
. 
Repositories 
{ 
public 

class 
UserAuthRepository #
:$ %
IUserAuthRepository& 9
<9 :
User: >
>> ?
{ 
private 
readonly 
UsersDbContext '
usersDbContext( 6
;6 7
private 
readonly 
IConfiguration '
configuration( 5
;5 6
private 
readonly  
ApplicationDbContext -
context. 5
;5 6
public 
UserAuthRepository !
(! "
UsersDbContext" 0
usersDbContext1 ?
,? @
IConfigurationA O
configurationP ]
,] ^ 
ApplicationDbContext_ s
contextt {
){ |
{ 	
this 
. 
usersDbContext 
=  !
usersDbContext" 0
;0 1
this 
. 
configuration 
=  
configuration! .
;. /
this 
. 
context 
= 
context "
;" #
} 	
public 
async 
Task 
< 
Result  
<  !
string! '
>' (
>( )
VerifyPassword* 8
(8 9
Guid9 =
userId> D
,D E
stringF L
passwordM U
)U V
{ 	
try   
{!! 
var"" 
existingUser""  
=""! "
await""# (
usersDbContext"") 7
.""7 8
Users""8 =
.""= > 
SingleOrDefaultAsync""> R
(""R S
u""S T
=>""U W
u""X Y
.""Y Z
UserId""Z `
==""a c
userId""d j
)""j k
;""k l
if## 
(## 
existingUser##  
==##! #
null##$ (
||##) +
!##, -
BCrypt##- 3
.##3 4
Net##4 7
.##7 8
BCrypt##8 >
.##> ?
Verify##? E
(##E F
password##F N
,##N O
existingUser##P \
.##\ ]
Password##] e
)##e f
)##f g
{$$ 
return%% 
Result%% !
<%%! "
string%%" (
>%%( )
.%%) *
Failure%%* 1
(%%1 2
$str%%2 D
)%%D E
;%%E F
}&& 
return'' 
Result'' 
<'' 
string'' $
>''$ %
.''% &
Success''& -
(''- .
$str''. C
)''C D
;''D E
}(( 
catch)) 
()) 
	Exception)) 
ex)) 
)))  
{** 
return++ 
Result++ 
<++ 
string++ $
>++$ %
.++% &
Failure++& -
(++- .
ex++. 0
.++0 1
Message++1 8
)++8 9
;++9 :
},, 
}-- 	
public// 
async// 
Task// 
<// 
Result//  
<//  !
string//! '
>//' (
>//( )
Login//* /
(/// 0
User//0 4
user//5 9
)//9 :
{00 	
try11 
{22 
var33 
existingUser33  
=33! "
await33# (
usersDbContext33) 7
.337 8
Users338 =
.33= > 
SingleOrDefaultAsync33> R
(33R S
u33S T
=>33U W
u33X Y
.33Y Z
Email33Z _
==33` b
user33c g
.33g h
Email33h m
)33m n
;33n o
if44 
(44 
existingUser44  
==44! #
null44$ (
||44) +
!44, -
BCrypt44- 3
.443 4
Net444 7
.447 8
BCrypt448 >
.44> ?
Verify44? E
(44E F
user44F J
.44J K
Password44K S
,44S T
existingUser44U a
.44a b
Password44b j
)44j k
)44k l
{55 
return66 
Result66 !
<66! "
string66" (
>66( )
.66) *
Failure66* 1
(661 2
$str662 G
)66G H
;66H I
}77 
var99 
tokenHandler99  
=99! "
new99# &#
JwtSecurityTokenHandler99' >
(99> ?
)99? @
;99@ A
var:: 
key:: 
=:: 
Encoding:: "
.::" #
ASCII::# (
.::( )
GetBytes::) 1
(::1 2
configuration::2 ?
[::? @
$str::@ I
]::I J
!::J K
)::K L
;::L M
var;; 
tokenDescriptor;; #
=;;$ %
new;;& )#
SecurityTokenDescriptor;;* A
{<< 
Subject== 
=== 
new== !
ClaimsIdentity==" 0
(==0 1
new==1 4
List==5 9
<==9 :
Claim==: ?
>==? @
{>> 
new?? 
Claim?? !
(??! "

ClaimTypes??" ,
.??, -
Name??- 1
,??1 2
existingUser??3 ?
.??? @
UserId??@ F
.??F G
ToString??G O
(??O P
)??P Q
)??Q R
,??R S
new@@ 
Claim@@ !
(@@! "

ClaimTypes@@" ,
.@@, -
Role@@- 1
,@@1 2
existingUser@@3 ?
.@@? @
UserType@@@ H
.@@H I
ToString@@I Q
(@@Q R
)@@R S
)@@S T
}AA 
)AA 
,AA 
ExpiresBB 
=BB 
DateTimeBB &
.BB& '
UtcNowBB' -
.BB- .
AddDaysBB. 5
(BB5 6
$numBB6 7
)BB7 8
,BB8 9
SigningCredentialsCC &
=CC' (
newCC) ,
SigningCredentialsCC- ?
(CC? @
newCC@ C 
SymmetricSecurityKeyCCD X
(CCX Y
keyCCY \
)CC\ ]
,CC] ^
SecurityAlgorithmsCC_ q
.CCq r 
HmacSha256Signature	CCr 
)
CC 
}DD 
;DD 
varFF 
tokenFF 
=FF 
tokenHandlerFF (
.FF( )
CreateTokenFF) 4
(FF4 5
tokenDescriptorFF5 D
)FFD E
;FFE F
returnGG 
ResultGG 
<GG 
stringGG $
>GG$ %
.GG% &
SuccessGG& -
(GG- .
tokenHandlerGG. :
.GG: ;

WriteTokenGG; E
(GGE F
tokenGGF K
)GGK L
)GGL M
;GGM N
}HH 
catchII 
(II 
	ExceptionII 
exII 
)II  
{JJ 
returnKK 
ResultKK 
<KK 
stringKK $
>KK$ %
.KK% &
FailureKK& -
(KK- .
exKK. 0
.KK0 1
MessageKK1 8
)KK8 9
;KK9 :
}LL 
}MM 	
publicOO 
asyncOO 
TaskOO 
<OO 
ResultOO  
<OO  !
stringOO! '
>OO' (
>OO( ) 
SendVerificationCodeOO* >
(OO> ?
UserOO? C
userOOD H
,OOH I
CancellationTokenOOJ [
cancellationTokenOO\ m
)OOm n
{PP 	
tryQQ 
{RR 
varSS 
verificationCodeSS $
=SS% &
newSS' *
RandomSS+ 1
(SS1 2
)SS2 3
.SS3 4
NextSS4 8
(SS8 9
$numSS9 ?
,SS? @
$numSSA G
)SSG H
;SSH I
varTT 
imageFromStringTT #
=TT$ %
ConvertTT& -
.TT- .
FromBase64StringTT. >
(TT> ?
userTT? C
.TTC D
ImageTTD I
)TTI J
;TTJ K
varUU 
existingUserUU  
=UU! "
awaitUU# (
contextUU) 0
.UU0 1
UsersUU1 6
.UU6 7 
SingleOrDefaultAsyncUU7 K
(UUK L
uUUL M
=>UUN P
uUUQ R
.UUR S
EmailUUS X
==UUY [
userUU\ `
.UU` a
EmailUUa f
,UUf g
cancellationTokenUUh y
)UUy z
;UUz {
ifVV 
(VV 
existingUserVV  
!=VV! #
nullVV$ (
)VV( )
{WW 
returnXX 
ResultXX !
<XX! "
stringXX" (
>XX( )
.XX) *
FailureXX* 1
(XX1 2
$strXX2 H
)XXH I
;XXI J
}YY 
ConfirmationCodeZZ  
confirmationCodeZZ! 1
=ZZ2 3
newZZ4 7
ConfirmationCodeZZ8 H
{[[ 
Code\\ 
=\\ 
verificationCode\\ +
,\\+ ,
Email]] 
=]] 
user]]  
.]]  !
Email]]! &
,]]& '
Name^^ 
=^^ 
user^^ 
.^^  
Name^^  $
,^^$ %
Password__ 
=__ 
user__ #
.__# $
Password__$ ,
,__, -
UserType`` 
=`` 
user`` #
.``# $
UserType``$ ,
,``, -
Imageaa 
=aa 
imageFromStringaa +
}bb 
;bb 
varcc 
sendGridClientcc "
=cc# $
newcc% (
SendGridClientcc) 7
(cc7 8
configurationcc8 E
[ccE F
$strccF W
]ccW X
)ccX Y
;ccY Z
vardd 
fromdd 
=dd 
newdd 
EmailAddressdd +
(dd+ ,
configurationdd, 9
[dd9 :
$strdd: N
]ddN O
,ddO P
configurationddQ ^
[dd^ _
$strdd_ r
]ddr s
)dds t
;ddt u
varee 
toee 
=ee 
newee 
EmailAddressee )
(ee) *
useree* .
.ee. /
Emailee/ 4
,ee4 5
useree6 :
.ee: ;
Nameee; ?
)ee? @
;ee@ A
varff 
dynamicTemplateDataff '
=ff( )
newff* -

Dictionaryff. 8
<ff8 9
stringff9 ?
,ff? @
stringffA G
>ffG H
{gg 
{hh 
$strhh  
,hh  !
userhh" &
.hh& '
Namehh' +
}hh, -
,hh- .
{ii 
$strii 
,ii 
verificationCodeii .
.ii. /
ToStringii/ 7
(ii7 8
)ii8 9
}ii: ;
}jj 
;jj 
varkk 
msgkk 
=kk 

MailHelperkk $
.kk$ %%
CreateSingleTemplateEmailkk% >
(kk> ?
fromkk? C
,kkC D
tokkE G
,kkG H
configurationkkI V
[kkV W
$strkkW l
]kkl m
,kkm n 
dynamicTemplateData	kko 
)
kk 
;
kk 
varll 
responsell 
=ll 
awaitll $
sendGridClientll% 3
.ll3 4
SendEmailAsyncll4 B
(llB C
msgllC F
,llF G
cancellationTokenllH Y
)llY Z
;llZ [
ifmm 
(mm 
responsemm 
.mm 

StatusCodemm '
!=mm( *
HttpStatusCodemm+ 9
.mm9 :
OKmm: <
&&mm= ?
responsemm@ H
.mmH I

StatusCodemmI S
!=mmT V
HttpStatusCodemmW e
.mme f
Acceptedmmf n
)mmn o
{nn 
returnoo 
Resultoo !
<oo! "
stringoo" (
>oo( )
.oo) *
Failureoo* 1
(oo1 2
$stroo2 H
)ooH I
;ooI J
}pp 
elseqq 
{rr 
varss $
existingConfirmationCodess 0
=ss1 2
awaitss3 8
usersDbContextss9 G
.ssG H
ConfirmationCodesssH Y
.ssY Z 
SingleOrDefaultAsyncssZ n
(ssn o
csso p
=>ssq s
csst u
.ssu v
Emailssv {
==ss| ~
user	ss 
.
ss 
Email
ss 
,
ss 
cancellationToken
ss 
)
ss 
;
ss 
iftt 
(tt $
existingConfirmationCodett 0
!=tt1 3
nulltt4 8
)tt8 9
{uu 
usersDbContextvv &
.vv& '
ConfirmationCodesvv' 8
.vv8 9
Removevv9 ?
(vv? @$
existingConfirmationCodevv@ X
)vvX Y
;vvY Z
}ww 
usersDbContextxx "
.xx" #
ConfirmationCodesxx# 4
.xx4 5
Addxx5 8
(xx8 9
confirmationCodexx9 I
)xxI J
;xxJ K
awaityy 
usersDbContextyy (
.yy( )
SaveChangesAsyncyy) 9
(yy9 :
cancellationTokenyy: K
)yyK L
;yyL M
var{{  
oldConfirmationCodes{{ ,
={{- .
await{{/ 4
usersDbContext{{5 C
.{{C D
ConfirmationCodes{{D U
.{{U V
Where{{V [
({{[ \
c{{\ ]
=>{{^ `
c{{a b
.{{b c
CreationTime{{c o
.{{o p

AddMinutes{{p z
({{z {
$num{{{ }
){{} ~
<	{{ 
DateTime
{{ 
.
{{ 
UtcNow
{{ 
)
{{ 
.
{{ 
ToListAsync
{{ 
(
{{ 
cancellationToken
{{ ¯
)
{{¯ °
;
{{° ±
if|| 
(||  
oldConfirmationCodes|| ,
!=||- /
null||0 4
)||4 5
{||6 7
usersDbContext}} &
.}}& '
ConfirmationCodes}}' 8
.}}8 9
RemoveRange}}9 D
(}}D E 
oldConfirmationCodes}}E Y
)}}Y Z
;}}Z [
await~~ 
usersDbContext~~ ,
.~~, -
SaveChangesAsync~~- =
(~~= >
cancellationToken~~> O
)~~O P
;~~P Q
} 
return
 
Result
 !
<
! "
string
" (
>
( )
.
) *
Success
* 1
(
1 2
verificationCode
2 B
.
B C
ToString
C K
(
K L
)
L M
)
M N
;
N O
}
 
}
 
catch
 
(
 
	Exception
 
ex
 
)
  
{
 
return
 
Result
 
<
 
string
 $
>
$ %
.
% &
Failure
& -
(
- .
ex
. 0
.
0 1
Message
1 8
)
8 9
;
9 :
}
 
}
 	
public
 
async
 
Task
 
<
 
Result
  
<
  !
Guid
! %
>
% &
>
& '
Register
( 0
(
0 1
int
1 4
verificationCode
5 E
,
E F
CancellationToken
G X
cancellationToken
Y j
)
j k
{
 	
try
 
{
 
var
 $
confirmationCodeEntity
 *
=
+ ,
await
- 2
usersDbContext
3 A
.
A B
ConfirmationCodes
B S
.
S T"
SingleOrDefaultAsync
T h
(
h i
c
i j
=>
k m
c
n o
.
o p
Code
p t
==
u w
verificationCodex 
, !
cancellationToken 
) 
; 
if
 
(
 $
confirmationCodeEntity
 *
==
+ -
null
. 2
)
2 3
{
 
return
 
Result
 !
<
! "
Guid
" &
>
& '
.
' (
Failure
( /
(
/ 0
$str
0 K
)
K L
;
L M
}
 
if
 
(
 $
confirmationCodeEntity
 *
.
* +
CreationTime
+ 7
.
7 8

AddMinutes
8 B
(
B C
$num
C E
)
E F
<
G H
DateTime
I Q
.
Q R
UtcNow
R X
)
X Y
{
 
usersDbContext
 "
.
" #
ConfirmationCodes
# 4
.
4 5
Remove
5 ;
(
; <$
confirmationCodeEntity
< R
)
R S
;
S T
await
 
usersDbContext
 (
.
( )
SaveChangesAsync
) 9
(
9 :
cancellationToken
: K
)
K L
;
L M
return
 
Result
 !
<
! "
Guid
" &
>
& '
.
' (
Failure
( /
(
/ 0
$str
0 K
)
K L
;
L M
}
 
string
 
?
 
relativePath
 $
=
% &
configuration
' 4
[
4 5
$str
5 H
]
H I
;
I J
if
 
(
 
string
 
.
 
IsNullOrEmpty
 (
(
( )
relativePath
) 5
)
5 6
)
6 7
{
 
return
 
Result
 !
<
! "
Guid
" &
>
& '
.
' (
Failure
( /
(
/ 0
$str
0 [
)
[ \
;
\ ]
}
 
var
 
projectRootDir
 "
=
# $
	Directory
% .
.
. /
	GetParent
/ 8
(
8 9

AppContext
9 C
.
C D
BaseDirectory
D Q
)
Q R
?
R S
.
S T
Parent
T Z
?
Z [
.
[ \
Parent
\ b
?
b c
.
c d
Parent
d j
;
j k
if
   
(
   
projectRootDir
   "
==
  # %
null
  & *
)
  * +
{
¡¡ 
return
¢¢ 
Result
¢¢ !
<
¢¢! "
Guid
¢¢" &
>
¢¢& '
.
¢¢' (
Failure
¢¢( /
(
¢¢/ 0
$str
¢¢0 a
)
¢¢a b
;
¢¢b c
}
££ 
string
¥¥ 
fullPathToPhotos
¥¥ '
=
¥¥( )
Path
¥¥* .
.
¥¥. /
Combine
¥¥/ 6
(
¥¥6 7
projectRootDir
¥¥7 E
.
¥¥E F
FullName
¥¥F N
,
¥¥N O
relativePath
¥¥P \
)
¥¥\ ]
;
¥¥] ^
if
§§ 
(
§§ 
!
§§ 
	Directory
§§ 
.
§§ 
Exists
§§ %
(
§§% &
fullPathToPhotos
§§& 6
)
§§6 7
)
§§7 8
{
¨¨ 
return
©© 
Result
©© !
<
©©! "
Guid
©©" &
>
©©& '
.
©©' (
Failure
©©( /
(
©©/ 0
$"
©©0 2
$str
©©2 _
{
©©_ `
fullPathToPhotos
©©` p
}
©©p q
"
©©q r
)
©©r s
;
©©s t
}
ªª 
fullPathToPhotos
¬¬  
=
¬¬! "
Path
¬¬# '
.
¬¬' (
GetFullPath
¬¬( 3
(
¬¬3 4
fullPathToPhotos
¬¬4 D
)
¬¬D E
;
¬¬E F
string
­­ 
profilePhotoPath
­­ '
;
­­' (
if
¯¯ 
(
¯¯ $
confirmationCodeEntity
¯¯ *
.
¯¯* +
Image
¯¯+ 0
!=
¯¯1 3
null
¯¯4 8
&&
¯¯9 ;$
confirmationCodeEntity
¯¯< R
.
¯¯R S
Image
¯¯S X
.
¯¯X Y
Length
¯¯Y _
>
¯¯_ `
$num
¯¯a b
)
¯¯b c
{
°° 
string
±± 
fileName
±± #
=
±±$ %
$"
±±& (
{
±±( )$
confirmationCodeEntity
±±) ?
.
±±? @
Name
±±@ D
}
±±D E
$str
±±E I
"
±±I J
;
±±J K
profilePhotoPath
²² $
=
²²% &
Path
²²' +
.
²²+ ,
Combine
²², 3
(
²²3 4
fullPathToPhotos
²²4 D
,
²²D E
fileName
²²F N
)
²²N O
;
²²O P
await
³³ 
File
³³ 
.
³³  
WriteAllBytesAsync
³³ 1
(
³³1 2
profilePhotoPath
³³2 B
,
³³B C$
confirmationCodeEntity
³³D Z
.
³³Z [
Image
³³[ `
,
³³` a
cancellationToken
³³b s
)
³³s t
;
³³t u
}
´´ 
else
µµ 
{
¶¶ 
string
·· 
defaultPhotoPath
·· +
=
··, -
Path
··. 2
.
··2 3
Combine
··3 :
(
··: ;
fullPathToPhotos
··; K
,
··K L
$str
··M Z
)
··Z [
;
··[ \
profilePhotoPath
¸¸ $
=
¸¸% &
Path
¸¸' +
.
¸¸+ ,
Combine
¸¸, 3
(
¸¸3 4
fullPathToPhotos
¸¸4 D
,
¸¸D E
$"
¸¸F H
{
¸¸H I$
confirmationCodeEntity
¸¸I _
.
¸¸_ `
Name
¸¸` d
}
¸¸d e
$str
¸¸e i
"
¸¸i j
)
¸¸j k
;
¸¸k l
File
¹¹ 
.
¹¹ 
Copy
¹¹ 
(
¹¹ 
defaultPhotoPath
¹¹ .
,
¹¹. /
profilePhotoPath
¹¹0 @
,
¹¹@ A
	overwrite
¹¹B K
:
¹¹K L
true
¹¹M Q
)
¹¹Q R
;
¹¹R S
}
ºº 
var
»» 
user
»» 
=
»» 
new
»» 
User
»» #
{
¼¼ 
Name
½½ 
=
½½ $
confirmationCodeEntity
½½ 1
.
½½1 2
Name
½½2 6
,
½½6 7
Email
¾¾ 
=
¾¾ $
confirmationCodeEntity
¾¾ 2
.
¾¾2 3
Email
¾¾3 8
,
¾¾8 9
Password
¿¿ 
=
¿¿ $
confirmationCodeEntity
¿¿ 5
.
¿¿5 6
Password
¿¿6 >
,
¿¿> ?
UserType
ÀÀ 
=
ÀÀ $
confirmationCodeEntity
ÀÀ 5
.
ÀÀ5 6
UserType
ÀÀ6 >
,
ÀÀ> ?
Image
ÁÁ 
=
ÁÁ 
profilePhotoPath
ÁÁ ,
}
ÂÂ 
;
ÂÂ 
Guid
ÃÃ 
userId
ÃÃ 
;
ÃÃ 
if
ÅÅ 
(
ÅÅ 
user
ÅÅ 
.
ÅÅ 
UserType
ÅÅ !
==
ÅÅ" $
UserType
ÅÅ% -
.
ÅÅ- .
Client
ÅÅ. 4
)
ÅÅ4 5
{
ÆÆ 
userId
ÇÇ 
=
ÇÇ 
await
ÇÇ " 
AddUserClientAsync
ÇÇ# 5
(
ÇÇ5 6
user
ÇÇ6 :
,
ÇÇ: ;
cancellationToken
ÇÇ< M
)
ÇÇM N
;
ÇÇN O
}
ÈÈ 
else
ÉÉ 
if
ÉÉ 
(
ÉÉ 
user
ÉÉ 
.
ÉÉ 
UserType
ÉÉ &
==
ÉÉ' )
UserType
ÉÉ* 2
.
ÉÉ2 3
Business
ÉÉ3 ;
)
ÉÉ; <
{
ÊÊ 
userId
ËË 
=
ËË 
await
ËË ""
AddUserBusinessAsync
ËË# 7
(
ËË7 8
user
ËË8 <
,
ËË< =
cancellationToken
ËË> O
)
ËËO P
;
ËËP Q
}
ÌÌ 
else
ÍÍ 
{
ÎÎ 
return
ÏÏ 
Result
ÏÏ !
<
ÏÏ! "
Guid
ÏÏ" &
>
ÏÏ& '
.
ÏÏ' (
Failure
ÏÏ( /
(
ÏÏ/ 0
$str
ÏÏ0 D
)
ÏÏD E
;
ÏÏE F
}
ÐÐ 
user
ÑÑ 
.
ÑÑ 
UserId
ÑÑ 
=
ÑÑ 
userId
ÑÑ $
;
ÑÑ$ %
usersDbContext
ÒÒ 
.
ÒÒ 
Users
ÒÒ $
.
ÒÒ$ %
Add
ÒÒ% (
(
ÒÒ( )
user
ÒÒ) -
)
ÒÒ- .
;
ÒÒ. /
await
ÓÓ 
usersDbContext
ÓÓ $
.
ÓÓ$ %
SaveChangesAsync
ÓÓ% 5
(
ÓÓ5 6
cancellationToken
ÓÓ6 G
)
ÓÓG H
;
ÓÓH I
usersDbContext
ÔÔ 
.
ÔÔ 
ConfirmationCodes
ÔÔ 0
.
ÔÔ0 1
Remove
ÔÔ1 7
(
ÔÔ7 8$
confirmationCodeEntity
ÔÔ8 N
)
ÔÔN O
;
ÔÔO P
await
ÕÕ 
usersDbContext
ÕÕ $
.
ÕÕ$ %
SaveChangesAsync
ÕÕ% 5
(
ÕÕ5 6
cancellationToken
ÕÕ6 G
)
ÕÕG H
;
ÕÕH I
return
×× 
Result
×× 
<
×× 
Guid
×× "
>
××" #
.
××# $
Success
××$ +
(
××+ ,
userId
××, 2
)
××2 3
;
××3 4
}
ØØ 
catch
ÙÙ 
(
ÙÙ 
	Exception
ÙÙ 
ex
ÙÙ 
)
ÙÙ  
{
ÚÚ 
return
ÛÛ 
Result
ÛÛ 
<
ÛÛ 
Guid
ÛÛ "
>
ÛÛ" #
.
ÛÛ# $
Failure
ÛÛ$ +
(
ÛÛ+ ,
ex
ÛÛ, .
.
ÛÛ. /
Message
ÛÛ/ 6
)
ÛÛ6 7
;
ÛÛ7 8
}
ÜÜ 
}
ÝÝ 	
private
ßß 
async
ßß 
Task
ßß 
<
ßß 
Guid
ßß 
>
ßß   
AddUserClientAsync
ßß! 3
(
ßß3 4
User
ßß4 8
user
ßß9 =
,
ßß= >
CancellationToken
ßß? P
cancellationToken
ßßQ b
)
ßßb c
{
àà 	
var
áá 

userClient
áá 
=
áá 
new
áá  

UserClient
áá! +
{
ââ 
Name
ãã 
=
ãã 
user
ãã 
.
ãã 
Name
ãã  
,
ãã  !
Email
ää 
=
ää 
user
ää 
.
ää 
Email
ää "
,
ää" #
Password
åå 
=
åå 
user
åå 
.
åå  
Password
åå  (
,
åå( )
UserType
ææ 
=
ææ 
UserType
ææ #
.
ææ# $
Client
ææ$ *
,
ææ* +
Image
çç 
=
çç 
user
çç 
.
çç 
Image
çç "
}
èè 
;
èè 
await
êê 
context
êê 
.
êê 
UserClients
êê %
.
êê% &
AddAsync
êê& .
(
êê. /

userClient
êê/ 9
,
êê9 :
cancellationToken
êê; L
)
êêL M
;
êêM N
await
ëë 
context
ëë 
.
ëë 
SaveChangesAsync
ëë *
(
ëë* +
cancellationToken
ëë+ <
)
ëë< =
;
ëë= >
return
ìì 

userClient
ìì 
.
ìì 
UserId
ìì $
;
ìì$ %
}
íí 	
private
ïï 
async
ïï 
Task
ïï 
<
ïï 
Guid
ïï 
>
ïï  "
AddUserBusinessAsync
ïï! 5
(
ïï5 6
User
ïï6 :
user
ïï; ?
,
ïï? @
CancellationToken
ïïA R
cancellationToken
ïïS d
)
ïïd e
{
ðð 	
var
ññ 
userBusiness
ññ 
=
ññ 
new
ññ "
UserBusiness
ññ# /
{
òò 
Name
óó 
=
óó 
user
óó 
.
óó 
Name
óó  
,
óó  !
Email
ôô 
=
ôô 
user
ôô 
.
ôô 
Email
ôô "
,
ôô" #
Password
õõ 
=
õõ 
user
õõ 
.
õõ  
Password
õõ  (
,
õõ( )
UserType
öö 
=
öö 
UserType
öö #
.
öö# $
Business
öö$ ,
,
öö, -
Image
÷÷ 
=
÷÷ 
user
÷÷ 
.
÷÷ 
Image
÷÷ "
}
øø 
;
øø 
await
úú 
context
úú 
.
úú 
UserBusinesses
úú (
.
úú( )
AddAsync
úú) 1
(
úú1 2
userBusiness
úú2 >
,
úú> ?
cancellationToken
úú@ Q
)
úúQ R
;
úúR S
await
ûû 
context
ûû 
.
ûû 
SaveChangesAsync
ûû *
(
ûû* +
cancellationToken
ûû+ <
)
ûû< =
;
ûû= >
return
üü 
userBusiness
üü 
.
üü  
UserId
üü  &
;
üü& '
}
ýý 	
public
ÿÿ 
async
ÿÿ 
Task
ÿÿ 
DeleteUserAsync
ÿÿ )
(
ÿÿ) *
Guid
ÿÿ* .
userId
ÿÿ/ 5
)
ÿÿ5 6
{
 	
User
 
?
 
user
 
=
 
await
 
usersDbContext
 -
.
- .
Users
. 3
.
3 4
	FindAsync
4 =
(
= >
userId
> D
)
D E
;
E F
if
 
(
 
user
 
==
 
null
 
)
 
{
 
throw
 
new
 "
KeyNotFoundException
 .
(
. /
$str
/ ?
)
? @
;
@ A
}
 
usersDbContext
 
.
 
Users
  
.
  !
Remove
! '
(
' (
user
( ,
)
, -
;
- .
await
 
usersDbContext
  
.
  !
SaveChangesAsync
! 1
(
1 2
)
2 3
;
3 4
if
 
(
 
user
 
.
 
UserType
 
==
  
UserType
! )
.
) *
Client
* 0
)
0 1
{
 
var
 

userClient
 
=
  
await
! &
context
' .
.
. /
UserClients
/ :
.
: ;
	FindAsync
; D
(
D E
userId
E K
)
K L
;
L M
if
 
(
 

userClient
 
!=
 !
null
" &
)
& '
{
 
context
 
.
 
UserClients
 '
.
' (
Remove
( .
(
. /

userClient
/ 9
)
9 :
;
: ;
await
 
context
 !
.
! "
SaveChangesAsync
" 2
(
2 3
)
3 4
;
4 5
}
 
}
 
else
 
if
 
(
 
user
 
.
 
UserType
 "
==
# %
UserType
& .
.
. /
Business
/ 7
)
7 8
{
 
var
 
userBusiness
  
=
! "
await
# (
context
) 0
.
0 1
UserBusinesses
1 ?
.
? @
	FindAsync
@ I
(
I J
userId
J P
)
P Q
;
Q R
if
 
(
 
userBusiness
  
!=
! #
null
$ (
)
( )
{
 
context
 
.
 
UserBusinesses
 *
.
* +
Remove
+ 1
(
1 2
userBusiness
2 >
)
> ?
;
? @
await
 
context
 !
.
! "
SaveChangesAsync
" 2
(
2 3
)
3 4
;
4 5
}
 
}
 
}
 	
public
 
async
 
Task
 
<
 
User
 
>
 
GetByIdAsync
  ,
(
, -
Guid
- 1
userId
2 8
)
8 9
{
 	
var
 
user
 
=
 
await
 
usersDbContext
 +
.
+ ,
Users
, 1
.
1 2
	FindAsync
2 ;
(
; <
userId
< B
)
B C
;
C D
if
 
(
 
user
 
==
 
null
 
)
 
{
   
throw
¡¡ 
new
¡¡ "
KeyNotFoundException
¡¡ .
(
¡¡. /
$str
¡¡/ ?
)
¡¡? @
;
¡¡@ A
}
¢¢ 
return
££ 
user
££ 
;
££ 
}
¤¤ 	
public
¦¦ 
async
¦¦ 
Task
¦¦ 
<
¦¦ 
Result
¦¦  
<
¦¦  !
object
¦¦! '
>
¦¦' (
>
¦¦( )
UpdateUserAsync
¦¦* 9
(
¦¦9 :
User
¦¦: >
user
¦¦? C
)
¦¦C D
{
§§ 	
try
¨¨ 
{
©© 
var
ªª 
existingUser
ªª  
=
ªª! "
await
ªª# (
usersDbContext
ªª) 7
.
ªª7 8
Users
ªª8 =
.
ªª= >
	FindAsync
ªª> G
(
ªªG H
user
ªªH L
.
ªªL M
UserId
ªªM S
)
ªªS T
;
ªªT U
if
«« 
(
«« 
existingUser
««  
==
««! #
null
««$ (
)
««( )
{
¬¬ 
return
­­ 
Result
­­ !
<
­­! "
object
­­" (
>
­­( )
.
­­) *
Failure
­­* 1
(
­­1 2
$str
­­2 B
)
­­B C
;
­­C D
}
®® 
existingUser
°° 
.
°° 
Name
°° !
=
°°" #
user
°°$ (
.
°°( )
Name
°°) -
;
°°- .
existingUser
±± 
.
±± 
Email
±± "
=
±±# $
user
±±% )
.
±±) *
Email
±±* /
;
±±/ 0
existingUser
²² 
.
²² 
Password
²² %
=
²²& '
user
²²( ,
.
²², -
Password
²²- 5
;
²²5 6
usersDbContext
´´ 
.
´´ 
Users
´´ $
.
´´$ %
Update
´´% +
(
´´+ ,
existingUser
´´, 8
)
´´8 9
;
´´9 :
await
µµ 
usersDbContext
µµ $
.
µµ$ %
SaveChangesAsync
µµ% 5
(
µµ5 6
)
µµ6 7
;
µµ7 8
if
¶¶ 
(
¶¶ 
user
¶¶ 
.
¶¶ 
UserType
¶¶ !
==
¶¶" $
UserType
¶¶% -
.
¶¶- .
Client
¶¶. 4
)
¶¶4 5
{
·· 
var
¸¸  
existingUserClient
¸¸ *
=
¸¸+ ,
await
¸¸- 2
context
¸¸3 :
.
¸¸: ;
UserClients
¸¸; F
.
¸¸F G
	FindAsync
¸¸G P
(
¸¸P Q
user
¸¸Q U
.
¸¸U V
UserId
¸¸V \
)
¸¸\ ]
;
¸¸] ^
if
¹¹ 
(
¹¹  
existingUserClient
¹¹ *
==
¹¹+ -
null
¹¹. 2
)
¹¹2 3
{
ºº 
return
»» 
Result
»» %
<
»»% &
object
»»& ,
>
»», -
.
»»- .
Failure
»». 5
(
»»5 6
$str
»»6 L
)
»»L M
;
»»M N
}
¼¼  
existingUserClient
¾¾ &
.
¾¾& '
Name
¾¾' +
=
¾¾, -
user
¾¾. 2
.
¾¾2 3
Name
¾¾3 7
;
¾¾7 8 
existingUserClient
¿¿ &
.
¿¿& '
Email
¿¿' ,
=
¿¿- .
user
¿¿/ 3
.
¿¿3 4
Email
¿¿4 9
;
¿¿9 : 
existingUserClient
ÀÀ &
.
ÀÀ& '
Password
ÀÀ' /
=
ÀÀ0 1
user
ÀÀ2 6
.
ÀÀ6 7
Password
ÀÀ7 ?
;
ÀÀ? @
context
ÂÂ 
.
ÂÂ 
UserClients
ÂÂ '
.
ÂÂ' (
Update
ÂÂ( .
(
ÂÂ. / 
existingUserClient
ÂÂ/ A
)
ÂÂA B
;
ÂÂB C
await
ÃÃ 
context
ÃÃ !
.
ÃÃ! "
SaveChangesAsync
ÃÃ" 2
(
ÃÃ2 3
)
ÃÃ3 4
;
ÃÃ4 5
}
ÄÄ 
else
ÅÅ 
if
ÅÅ 
(
ÅÅ 
user
ÅÅ 
.
ÅÅ 
UserType
ÅÅ &
==
ÅÅ' )
UserType
ÅÅ* 2
.
ÅÅ2 3
Business
ÅÅ3 ;
)
ÅÅ; <
{
ÆÆ 
var
ÇÇ "
existingUserBusiness
ÇÇ ,
=
ÇÇ- .
await
ÇÇ/ 4
context
ÇÇ5 <
.
ÇÇ< =
UserBusinesses
ÇÇ= K
.
ÇÇK L
	FindAsync
ÇÇL U
(
ÇÇU V
user
ÇÇV Z
.
ÇÇZ [
UserId
ÇÇ[ a
)
ÇÇa b
;
ÇÇb c
if
ÈÈ 
(
ÈÈ "
existingUserBusiness
ÈÈ ,
==
ÈÈ- /
null
ÈÈ0 4
)
ÈÈ4 5
{
ÉÉ 
return
ÊÊ 
Result
ÊÊ %
<
ÊÊ% &
object
ÊÊ& ,
>
ÊÊ, -
.
ÊÊ- .
Failure
ÊÊ. 5
(
ÊÊ5 6
$str
ÊÊ6 N
)
ÊÊN O
;
ÊÊO P
}
ËË "
existingUserBusiness
ÍÍ (
.
ÍÍ( )
Name
ÍÍ) -
=
ÍÍ. /
user
ÍÍ0 4
.
ÍÍ4 5
Name
ÍÍ5 9
;
ÍÍ9 :"
existingUserBusiness
ÎÎ (
.
ÎÎ( )
Email
ÎÎ) .
=
ÎÎ/ 0
user
ÎÎ1 5
.
ÎÎ5 6
Email
ÎÎ6 ;
;
ÎÎ; <"
existingUserBusiness
ÏÏ (
.
ÏÏ( )
Password
ÏÏ) 1
=
ÏÏ2 3
user
ÏÏ4 8
.
ÏÏ8 9
Password
ÏÏ9 A
;
ÏÏA B
context
ÑÑ 
.
ÑÑ 
UserBusinesses
ÑÑ *
.
ÑÑ* +
Update
ÑÑ+ 1
(
ÑÑ1 2"
existingUserBusiness
ÑÑ2 F
)
ÑÑF G
;
ÑÑG H
await
ÒÒ 
context
ÒÒ !
.
ÒÒ! "
SaveChangesAsync
ÒÒ" 2
(
ÒÒ2 3
)
ÒÒ3 4
;
ÒÒ4 5
}
ÓÓ 
return
ÔÔ 
Result
ÔÔ 
<
ÔÔ 
object
ÔÔ $
>
ÔÔ$ %
.
ÔÔ% &
Success
ÔÔ& -
(
ÔÔ- .
new
ÔÔ. 1
object
ÔÔ2 8
(
ÔÔ8 9
)
ÔÔ9 :
)
ÔÔ: ;
;
ÔÔ; <
}
ÕÕ 
catch
ÖÖ 
(
ÖÖ 
	Exception
ÖÖ 
ex
ÖÖ 
)
ÖÖ  
{
×× 
return
ØØ 
Result
ØØ 
<
ØØ 
object
ØØ $
>
ØØ$ %
.
ØØ% &
Failure
ØØ& -
(
ØØ- .
ex
ØØ. 0
.
ØØ0 1
Message
ØØ1 8
)
ØØ8 9
;
ØØ9 :
}
ÙÙ 
}
ÚÚ 	
}
ÝÝ 
}ÞÞ »>
HD:\BuySmart\BuySmart\Identity\Migrations\20250110202156_InitialCreate.cs
	namespace 	
Identity
 
. 

Migrations 
{ 
public		 

partial		 
class		 
InitialCreate		 &
:		' (
	Migration		) 2
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str )
,) *
columns 
: 
table 
=> !
new" %
{ 
CodeId 
= 
table "
." #
Column# )
<) *
Guid* .
>. /
(/ 0
type0 4
:4 5
$str6 <
,< =
nullable> F
:F G
falseH M
)M N
,N O
Code 
= 
table  
.  !
Column! '
<' (
int( +
>+ ,
(, -
type- 1
:1 2
$str3 <
,< =
nullable> F
:F G
falseH M
)M N
,N O
CreationTime  
=! "
table# (
.( )
Column) /
</ 0
DateTime0 8
>8 9
(9 :
type: >
:> ?
$str@ F
,F G
nullableH P
:P Q
falseR W
,W X
defaultValueSqlY h
:h i
$strj }
)} ~
,~ 
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 <
,< =
	maxLength> G
:G H
$numI L
,L M
nullableN V
:V W
falseX ]
)] ^
,^ _
Email 
= 
table !
.! "
Column" (
<( )
string) /
>/ 0
(0 1
type1 5
:5 6
$str7 =
,= >
	maxLength? H
:H I
$numJ M
,M N
nullableO W
:W X
falseY ^
)^ _
,_ `
Password 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: @
,@ A
	maxLengthB K
:K L
$numM P
,P Q
nullableR Z
:Z [
false\ a
)a b
,b c
UserType 
= 
table $
.$ %
Column% +
<+ ,
int, /
>/ 0
(0 1
type1 5
:5 6
$str7 @
,@ A
nullableB J
:J K
falseL Q
)Q R
,R S
Image 
= 
table !
.! "
Column" (
<( )
byte) -
[- .
]. /
>/ 0
(0 1
type1 5
:5 6
$str7 =
,= >
nullable? G
:G H
trueI M
)M N
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% ;
,; <
x= >
=>? A
xB C
.C D
CodeIdD J
)J K
;K L
} 
) 
; 
migrationBuilder   
.   
CreateTable   (
(  ( )
name!! 
:!! 
$str!! 
,!! 
columns"" 
:"" 
table"" 
=>"" !
new""" %
{## 
UserId$$ 
=$$ 
table$$ "
.$$" #
Column$$# )
<$$) *
Guid$$* .
>$$. /
($$/ 0
type$$0 4
:$$4 5
$str$$6 <
,$$< =
nullable$$> F
:$$F G
false$$H M
)$$M N
,$$N O
Name%% 
=%% 
table%%  
.%%  !
Column%%! '
<%%' (
string%%( .
>%%. /
(%%/ 0
type%%0 4
:%%4 5
$str%%6 <
,%%< =
	maxLength%%> G
:%%G H
$num%%I L
,%%L M
nullable%%N V
:%%V W
true%%X \
)%%\ ]
,%%] ^
Email&& 
=&& 
table&& !
.&&! "
Column&&" (
<&&( )
string&&) /
>&&/ 0
(&&0 1
type&&1 5
:&&5 6
$str&&7 =
,&&= >
	maxLength&&? H
:&&H I
$num&&J M
,&&M N
nullable&&O W
:&&W X
false&&Y ^
)&&^ _
,&&_ `
Password'' 
='' 
table'' $
.''$ %
Column''% +
<''+ ,
string'', 2
>''2 3
(''3 4
type''4 8
:''8 9
$str'': @
,''@ A
	maxLength''B K
:''K L
$num''M P
,''P Q
nullable''R Z
:''Z [
false''\ a
)''a b
,''b c
UserType(( 
=(( 
table(( $
.(($ %
Column((% +
<((+ ,
int((, /
>((/ 0
(((0 1
type((1 5
:((5 6
$str((7 @
,((@ A
nullable((B J
:((J K
false((L Q
,((Q R
defaultValue((S _
:((_ `
$num((a b
)((b c
,((c d
Image)) 
=)) 
table)) !
.))! "
Column))" (
<))( )
string))) /
>))/ 0
())0 1
type))1 5
:))5 6
$str))7 =
,))= >
	maxLength))? H
:))H I
$num))J M
,))M N
nullable))O W
:))W X
true))Y ]
)))] ^
}** 
,** 
constraints++ 
:++ 
table++ "
=>++# %
{,, 
table-- 
.-- 

PrimaryKey-- $
(--$ %
$str--% /
,--/ 0
x--1 2
=>--3 5
x--6 7
.--7 8
UserId--8 >
)--> ?
;--? @
}.. 
).. 
;.. 
migrationBuilder00 
.00 
CreateIndex00 (
(00( )
name11 
:11 
$str11 2
,112 3
table22 
:22 
$str22 *
,22* +
column33 
:33 
$str33 
,33  
unique44 
:44 
true44 
)44 
;44 
migrationBuilder66 
.66 
CreateIndex66 (
(66( )
name77 
:77 
$str77 &
,77& '
table88 
:88 
$str88 
,88 
column99 
:99 
$str99 
,99  
unique:: 
::: 
true:: 
):: 
;:: 
};; 	
	protected>> 
override>> 
void>> 
Down>>  $
(>>$ %
MigrationBuilder>>% 5
migrationBuilder>>6 F
)>>F G
{?? 	
migrationBuilder@@ 
.@@ 
	DropTable@@ &
(@@& '
nameAA 
:AA 
$strAA )
)AA) *
;AA* +
migrationBuilderCC 
.CC 
	DropTableCC &
(CC& '
nameDD 
:DD 
$strDD 
)DD 
;DD 
}EE 	
}FF 
}GG ¨
4D:\BuySmart\BuySmart\Identity\DependencyInjection.cs
	namespace 	
Identity
 
{ 
public 

static 
class 
DependencyInjection +
{ 
public 
static 
IServiceCollection (
AddIdentity) 4
(4 5
this5 9
IServiceCollection: L
servicesM U
,U V
IConfigurationW e
configurationf s
)s t
{ 	
services 
. 
AddDbContext !
<! "
UsersDbContext" 0
>0 1
(1 2
options2 9
=>: <
options 
. 
	UseSqlite 
( 
configuration +
.+ ,
GetConnectionString, ?
(? @
$str@ P
)P Q
+R S
$strT c
)c d
)d e
;e f
var 
key 
= 
Encoding 
. 
ASCII $
.$ %
GetBytes% -
(- .
$str. Q
)Q R
;R S
services 
. 
AddAuthentication &
(& '
options' .
=>/ 1
{ 
options 
. %
DefaultAuthenticateScheme 1
=2 3
JwtBearerDefaults4 E
.E F 
AuthenticationSchemeF Z
;Z [
options 
. "
DefaultChallengeScheme .
=/ 0
JwtBearerDefaults1 B
.B C 
AuthenticationSchemeC W
;W X
} 
) 
. 
AddJwtBearer 
( 
options !
=>" $
{ 
options 
. %
TokenValidationParameters 1
=2 3
new4 7%
TokenValidationParameters8 Q
{ 
ValidateIssuer   "
=  # $
false  % *
,  * +
ValidateAudience!! $
=!!% &
false!!' ,
,!!, -
ValidateLifetime"" $
=""% &
true""' +
,""+ ,$
ValidateIssuerSigningKey## ,
=##- .
true##/ 3
,##3 4
IssuerSigningKey$$ $
=$$% &
new$$' * 
SymmetricSecurityKey$$+ ?
($$? @
key$$@ C
)$$C D
}%% 
;%% 
}&& 
)&& 
;&& 
services(( 
.(( 
	AddScoped(( 
<(( 
IUserAuthRepository(( 2
<((2 3
User((3 7
>((7 8
,((8 9
UserAuthRepository((: L
>((L M
(((M N
)((N O
;((O P
return** 
services** 
;** 
}++ 	
},, 
}-- 