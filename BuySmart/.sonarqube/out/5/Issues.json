{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.12.0.0",
        "fileVersion": "4.12.0-3.24523.4 (f3348c2a)",
        "semanticVersion": "4.12.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/BuySmart/BuySmart/BuySmart.Application.UnitTests/AuthenticationHandlersTests/DeleteUserCommandHandlerTests.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 62,
                  "endLine": 44,
                  "endColumn": 72
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8620",
          "level": "warning",
          "message": "Argument of type 'Task<User>' cannot be used for parameter 'value' of type 'Task<User?>' in 'ConfiguredCall SubstituteExtensions.Returns<User?>(Task<User?> value, User? returnThis, params User?[] returnThese)' due to differences in the nullability of reference types.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/BuySmart/BuySmart/BuySmart.Application.UnitTests/AuthenticationHandlersTests/DeleteUserCommandHandlerTests.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 13,
                  "endLine": 44,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/BuySmart/BuySmart/BuySmart.Application.UnitTests/AuthenticationHandlersTests/UpdateUserCommandHandlerTests.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 70,
                  "endLine": 30,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8620",
          "level": "warning",
          "message": "Argument of type 'Task<User>' cannot be used for parameter 'value' of type 'Task<User?>' in 'ConfiguredCall SubstituteExtensions.Returns<User?>(Task<User?> value, User? returnThis, params User?[] returnThese)' due to differences in the nullability of reference types.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/BuySmart/BuySmart/BuySmart.Application.UnitTests/AuthenticationHandlersTests/UpdateUserCommandHandlerTests.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 13,
                  "endLine": 30,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/BuySmart/BuySmart/BuySmart.Application.UnitTests/UserBusinessHandlersTests/UserBusinessControllerTests.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 49,
                  "endLine": 116,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/BuySmart/BuySmart/BuySmart.Application.UnitTests/ProductHandlersTests/ProductControllerTests.cs",
                "region": {
                  "startLine": 134,
                  "startColumn": 49,
                  "endLine": 134,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/BuySmart/BuySmart/BuySmart.Application.UnitTests/ReviewBusinessHandlersTests/ReviewBusinessControllerTests.cs",
                "region": {
                  "startLine": 104,
                  "startColumn": 49,
                  "endLine": 104,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/BuySmart/BuySmart/BuySmart.Application.UnitTests/AuthenticationHandlersTests/AuthControllerTests.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 54,
                  "endLine": 97,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'ConvertImageToBase64' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/BuySmart/BuySmart/BuySmart.Application.UnitTests/UserClientHandlersTests/UserClientControllerTests.cs",
                "region": {
                  "startLine": 109,
                  "startColumn": 24,
                  "endLine": 109,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1847",
          "level": "note",
          "message": "Use 'string.Contains(char)' instead of 'string.Contains(string)' when searching for a single character",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/BuySmart/BuySmart/BuySmart.Application.UnitTests/CategoryHandlersTests/GetFilteredCategoriesQueryHandlerTests.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 76,
                  "endLine": 38,
                  "endColumn": 79
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/BuySmart/BuySmart/BuySmart.Application.UnitTests/AIMLTests/ProductPricePredictionModelTests.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 21,
                  "endLine": 15,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/BuySmart/BuySmart/BuySmart.Application.UnitTests/AIMLTests/ProductPricePredictionModelTests.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 21,
                  "endLine": 73,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/BuySmart/BuySmart/BuySmart.Application.UnitTests/AIMLTests/ProductPricePredictionModelTests.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 21,
                  "endLine": 51,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1847",
          "level": "note",
          "message": "Use 'string.Contains(char)' instead of 'string.Contains(string)' when searching for a single character",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/BuySmart/BuySmart/BuySmart.Application.UnitTests/BusinessHandlersTests/GetFilteredBusinessesQueryHandlerTests.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 76,
                  "endLine": 37,
                  "endColumn": 79
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1822": {
          "id": "CA1822",
          "shortDescription": "Mark members as static",
          "fullDescription": "Members that do not access instance data or call instance methods can be marked as static. After you mark the methods as static, the compiler will emit nonvirtual call sites to these members. This can give you a measurable performance gain for performance-sensitive code.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1822",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1847": {
          "id": "CA1847",
          "shortDescription": "Use char literal for a single character lookup",
          "fullDescription": "'string.Contains(char)' is available as a better performing overload for single char lookup.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1847",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CS8600": {
          "id": "CS8600",
          "shortDescription": "Converting null literal or possible null value to non-nullable type.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8600)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8620": {
          "id": "CS8620",
          "shortDescription": "Argument cannot be used for parameter due to differences in the nullability of reference types.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8620)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8625": {
          "id": "CS8625",
          "shortDescription": "Cannot convert null literal to non-nullable reference type.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8625)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S2699": {
          "id": "S2699",
          "shortDescription": "Tests should include assertions",
          "fullDescription": "The rule targets test methods that lack an assertion and consist solely of an action and, optionally, a setup.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2699",
          "properties": {
            "category": "Blocker Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}